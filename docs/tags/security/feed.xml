<?xml version="1.0" encoding="UTF-8"?><feed xlmns="http://www.w3.org/2005/Atom"><title type="text">Security - bitspook.in</title><id>https://bitspook.in/tags/security/feed.xml</id><updated>2024-01-04T08:18:20.164060Z</updated><link href="https://bitspook.in/tags/security/feed.xml" rel="self" title="Security"/><author type="text">Charanjit Singh</author><subtitle type="text"></subtitle><logo>https://bitspook.in/images/avatar.png</logo><entry><title type="text">Secure Software Teams Trantor</title><id>https://bitspook.in/talks/secure-software-teams-trantor</id><updated>2019-08-26T00:00:00.000000Z</updated><link href="https://bitspook.in/talks/secure-software-teams-trantor" title="Secure Software Teams Trantor"/><author type="text">Charanjit Singh</author><category term="talks"/><published>2019-08-26T00:00:00.000000Z</published><summary type="text"></summary><content type="html">&lt;iframe src=&quot;//slides.com/bitspook/secure-software-teams/embed?style=light&quot; width=&quot;100%&quot; height=&quot;420&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;
&lt;/iframe&gt;

&lt;p&gt;
I gave this talk in one of internal sessions at Trantor. Goal was to
acquaint one of our software teams into the world of application
security. This was a basic talk, just to familiarize attendees with
basic information security concepts. I leveraged this opportunity to
propose setting up a Red Team in Trantor.
&lt;/p&gt;

&lt;p&gt;
As practical part of this session, I created a docker based virtual lab
with webgoat set up. During the session we went through some of the
exercises, rest were left for the attendees as homework. Here's the
&lt;code&gt;docker-compose.yml&lt;/code&gt; file that was used in the session.
&lt;/p&gt;

&lt;pre class=&quot;example&quot; id=&quot;org322f1ff&quot;&gt;
version: '3'
services:
  webgoat:
    image: webgoat/webgoat-8.0
    environment:
      - WEBWOLF_HOST=webwolf
      - WEBWOLF_PORT=9090
    ports:
      - &amp;quot;8080:8080&amp;quot;
      - &amp;quot;9001:9001&amp;quot;
    volumes:
      - ./docker-volumes/webgoat-home:/home/webgoat/.webgoat
  webwolf:
    image: webgoat/webwolf
    ports:
      - &amp;quot;9090:9090&amp;quot;
    command: --spring.datasource.url=jdbc:hsqldb:hsql://webgoat:9001/webgoat --server.address=0.0.0.0
&lt;/pre&gt;

&lt;p&gt;
To start the lab, simply create a directory, save above snippet as
&lt;code&gt;docker-compose.yml&lt;/code&gt;, and run &lt;code&gt;docker-compose up&lt;/code&gt; in it. You will then
be able to access webgoat on &lt;a href=&quot;http://localhost:8080/WebGoat&quot;&gt;http://localhost:8080/WebGoat&lt;/a&gt;
&lt;/p&gt;
</content></entry><base href="https://bitspook.in"/></feed>